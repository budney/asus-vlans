#!/bin/sh

# Important variables
ROUTER_PORT=5t
WAN_IFACE=eth0
DEFAULT_BRIDGE=br0
BRIDGE_IP=172.X.0.1   ; # <-- Put an X where you want the VLAN number
NETMASK=255.255.255.0
LAN_IFNAMES=`nvram get ${DEFAULT_BRIDGE}_ifnames | sed 's}[ \t]*wl[0-9]\.[0-9][ \t]*}}g'`

# get list of configured guest wireless networks
#
Guest24=`nvram get wl0_vifs`
Guest5=`nvram get wl1_vifs`

# Sub for doing logging
log()
{
    /usr/bin/logger -p 6 "$@"
}

# Count the networks we've created for setting nvram parameters
counter=1

# Move all Guest wireless to br1
# attempt to move wireless guest fails (no security only works) until restart of eapd below
#
# Actually move the interfaces to the new bridge
for GuestWifiDevice in $Guest24 $Guest5
do
    # Figure out the VLAN number. wl0.1 becomes 101; wl1.2 becomes 112; etc.
    # The VLAN, bridge, and gateway IP all contain this number.
    N=`echo $GuestWifiDevice | sed 's/\.//; s/wl/1/;'`
    VLAN="vlan$N"
    BRIDGE="br$N"
    IP=`echo $BRIDGE_IP | sed "s/X/$N/"`

    # The lan counter is always sequential
    LAN="lan$counter"
    counter=$(( $counter + 1 ))

    log "Setting up $VLAN"

    # Create the VLAN
    robocfg vlan $N ports "$ROUTER_PORT"
    vconfig add $WAN_IFACE $N
    ifconfig $VLAN up

    # Create the bridge interface
    brctl addbr $BRIDGE
    brctl stp $BRIDGE on

    brctl delif $DEFAULT_BRIDGE $GuestWifiDevice
    brctl addif $BRIDGE $GuestWifiDevice

    # Activate the bridge interface
    ifconfig $BRIDGE $IP netmask $NETMASK up

    log "Setting nvram ${LAN}_ifname=$BRIDGE"
    log "Setting nvram ${LAN}_ifnames=\"$VLAN $GuestWifiDevice\""

    # Set nvram variables for the new network, 
    nvram set ${LAN}_ifname="$BRIDGE"
    nvram set ${LAN}_ifnames="$VLAN $GuestWifiDevice"
done

# If there were any guest networks, reset the nvram parameter for the original default network,
# and then restart eapd to fix handling of secured WiFi networks.
if [ "x$Guest24$Guest5" != "x" ]
then
    # Wait for the network interfaces to actually come up
    sleep 10

    log "Setting nvram lan_ifname=$DEFAULT_BRIDGE"
    log "Setting nvram lan_ifnames=\"$LAN_IFNAMES\""

    nvram set lan_ifname="$DEFAULT_BRIDGE"
    nvram set lan_ifnames="$LAN_IFNAMES"

    log "Old nvram value: ${DEFAULT_BRIDGE}_ifname=`nvram get ${DEFAULT_BRIDGE}_ifname`"
    log "Old nvram value: ${DEFAULT_BRIDGE}_ifnames=\"`nvram get ${DEFAULT_BRIDGE}_ifnames`\""

    nvram set ${DEFAULT_BRIDGE}_ifname="$DEFAULT_BRIDGE"
    nvram set ${DEFAULT_BRIDGE}_ifnames="$LAN_IFNAMES"

    log "Restarting eapd"

    # restart eapd
    killall eapd
    eapd
fi
